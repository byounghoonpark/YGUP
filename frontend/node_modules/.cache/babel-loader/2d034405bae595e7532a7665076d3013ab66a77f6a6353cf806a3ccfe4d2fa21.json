{"ast":null,"code":"import axios from \"axios\";\nconst BaseUrl = \"http://127.0.0.1:5000/api\";\nexport const LOGIN_ACTION = \"LOGIN_ACTION\";\nexport const loginApi = (id, pw) => async () => {\n  const url = BaseUrl + \"/user/login\";\n  try {\n    const res = await axios.post(url, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: {\n        id: id,\n        pw: pw\n      }\n    });\n    return Promise.resolve(res.data);\n  } catch (err) {\n    return Promise.reject(err);\n  }\n};\nexport const createCompanyApi = (companyInfo, companyLogo, wcloud) => {\n  const data = {\n    'cname': companyInfo.get('companyName'),\n    'address': companyInfo.get('companyAdr'),\n    'sales': companyInfo.get('companySales'),\n    'owner': companyInfo.get('companyCeo'),\n    'info': companyInfo.get('companyContent'),\n    'pay': companyInfo.get('companyPay'),\n    'resign': companyInfo.get('companyResign'),\n    'form': companyInfo.get('companyInfo'),\n    'courl': companyInfo.get('companyUrl'),\n    'user_type': 'admin'\n  };\n  const formData = new FormData();\n  formData.append('companyLogo', companyLogo);\n  formData.append('wcloud', wcloud);\n  formData.append('data', new Blob([JSON.stringify(data)], {\n    type: \"application/json\"\n  }));\n  axios.post(BaseUrl + '/company/create', formData, {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\"\n    }\n  }).then(res => {\n    return \"OK\";\n  }).catch(err => {\n    return \"FAIL\";\n  });\n  return '';\n};","map":{"version":3,"names":["axios","BaseUrl","LOGIN_ACTION","loginApi","id","pw","url","res","post","headers","body","Promise","resolve","data","err","reject","createCompanyApi","companyInfo","companyLogo","wcloud","get","formData","FormData","append","Blob","JSON","stringify","type","then","catch"],"sources":["/Users/henry/Desktop/prj/YGUP/frontend/src/util/axiosApi.tsx"],"sourcesContent":["import axios from \"axios\"\n\nconst BaseUrl = \"http://127.0.0.1:5000/api\"\n\nexport const LOGIN_ACTION = \"LOGIN_ACTION\"\n\nexport const loginApi = (id: string ,pw: string) => async () => {\n    const url = BaseUrl + \"/user/login\"\n    try{\n        const res = await axios.post(url, {\n            headers: \n            {\n                \"Content-Type\": \"application/json\"\n            },\n            body: { id: id, pw: pw }\n        })\n        return Promise.resolve(res.data)\n    } catch(err){\n        return Promise.reject(err)\n    }\n}\n\nexport const createCompanyApi = (companyInfo: Map<string,string>, companyLogo: File, wcloud: File):string => {\n    const data = {\n        'cname': companyInfo.get('companyName'),\n        'address': companyInfo.get('companyAdr'),\n        'sales': companyInfo.get('companySales'),\n        'owner': companyInfo.get('companyCeo'),\n        'info': companyInfo.get('companyContent'),\n        'pay': companyInfo.get('companyPay'),\n        'resign': companyInfo.get('companyResign'),\n        'form': companyInfo.get('companyInfo'),\n        'courl': companyInfo.get('companyUrl'),\n        'user_type': 'admin'\n    }\n\n    const formData = new FormData();\n    formData.append('companyLogo', companyLogo);\n    formData.append('wcloud', wcloud);\n    formData.append('data', new Blob([JSON.stringify(data)], {\n        type: \"application/json\"\n    }));\n\n    axios.post( BaseUrl+'/company/create'\n        , formData\n        , {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\"\n            }\n        }\n    ).then(res => {\n        return \"OK\"\n    }).catch(err => {\n        return \"FAIL\"\n    });\n    return ''\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B;AAE3C,OAAO,MAAMC,YAAY,GAAG,cAAc;AAE1C,OAAO,MAAMC,QAAQ,GAAG,CAACC,EAAU,EAAEC,EAAU,KAAK,YAAY;EAC5D,MAAMC,GAAG,GAAGL,OAAO,GAAG,aAAa;EACnC,IAAG;IACC,MAAMM,GAAG,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAACF,GAAG,EAAE;MAC9BG,OAAO,EACP;QACI,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAE;QAAEN,EAAE,EAAEA,EAAE;QAAEC,EAAE,EAAEA;MAAG;IAC3B,CAAC,CAAC;IACF,OAAOM,OAAO,CAACC,OAAO,CAACL,GAAG,CAACM,IAAI,CAAC;EACpC,CAAC,CAAC,OAAMC,GAAG,EAAC;IACR,OAAOH,OAAO,CAACI,MAAM,CAACD,GAAG,CAAC;EAC9B;AACJ,CAAC;AAED,OAAO,MAAME,gBAAgB,GAAG,CAACC,WAA+B,EAAEC,WAAiB,EAAEC,MAAY,KAAY;EACzG,MAAMN,IAAI,GAAG;IACT,OAAO,EAAEI,WAAW,CAACG,GAAG,CAAC,aAAa,CAAC;IACvC,SAAS,EAAEH,WAAW,CAACG,GAAG,CAAC,YAAY,CAAC;IACxC,OAAO,EAAEH,WAAW,CAACG,GAAG,CAAC,cAAc,CAAC;IACxC,OAAO,EAAEH,WAAW,CAACG,GAAG,CAAC,YAAY,CAAC;IACtC,MAAM,EAAEH,WAAW,CAACG,GAAG,CAAC,gBAAgB,CAAC;IACzC,KAAK,EAAEH,WAAW,CAACG,GAAG,CAAC,YAAY,CAAC;IACpC,QAAQ,EAAEH,WAAW,CAACG,GAAG,CAAC,eAAe,CAAC;IAC1C,MAAM,EAAEH,WAAW,CAACG,GAAG,CAAC,aAAa,CAAC;IACtC,OAAO,EAAEH,WAAW,CAACG,GAAG,CAAC,YAAY,CAAC;IACtC,WAAW,EAAE;EACjB,CAAC;EAED,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;EAC/BD,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAEL,WAAW,CAAC;EAC3CG,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEJ,MAAM,CAAC;EACjCE,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE,IAAIC,IAAI,CAAC,CAACC,IAAI,CAACC,SAAS,CAACb,IAAI,CAAC,CAAC,EAAE;IACrDc,IAAI,EAAE;EACV,CAAC,CAAC,CAAC;EAEH3B,KAAK,CAACQ,IAAI,CAAEP,OAAO,GAAC,iBAAiB,EAC/BoB,QAAQ,EACR;IACEZ,OAAO,EAAE;MACL,cAAc,EAAE;IACpB;EACJ,CAAC,CACJ,CAACmB,IAAI,CAACrB,GAAG,IAAI;IACV,OAAO,IAAI;EACf,CAAC,CAAC,CAACsB,KAAK,CAACf,GAAG,IAAI;IACZ,OAAO,MAAM;EACjB,CAAC,CAAC;EACF,OAAO,EAAE;AACb,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}