[{"/Users/henry/Desktop/prj/YGUP/frontend/src/index.tsx":"1","/Users/henry/Desktop/prj/YGUP/frontend/src/reportWebVitals.ts":"2","/Users/henry/Desktop/prj/YGUP/frontend/src/App.tsx":"3","/Users/henry/Desktop/prj/YGUP/frontend/src/pages/header.tsx":"4","/Users/henry/Desktop/prj/YGUP/frontend/src/pages/footer.tsx":"5","/Users/henry/Desktop/prj/YGUP/frontend/src/reducers/index.tsx":"6","/Users/henry/Desktop/prj/YGUP/frontend/src/pages/home.tsx":"7","/Users/henry/Desktop/prj/YGUP/frontend/src/pages/board/board_predict.tsx":"8","/Users/henry/Desktop/prj/YGUP/frontend/src/pages/board/board_mylist_chek.tsx":"9","/Users/henry/Desktop/prj/YGUP/frontend/src/pages/board/board_mylist.tsx":"10","/Users/henry/Desktop/prj/YGUP/frontend/src/pages/board/board_list.tsx":"11","/Users/henry/Desktop/prj/YGUP/frontend/src/pages/board/board_Fav.tsx":"12","/Users/henry/Desktop/prj/YGUP/frontend/src/pages/board/board_predict_write.tsx":"13","/Users/henry/Desktop/prj/YGUP/frontend/src/pages/board/board_like.tsx":"14","/Users/henry/Desktop/prj/YGUP/frontend/src/pages/user/login.tsx":"15","/Users/henry/Desktop/prj/YGUP/frontend/src/pages/user/join.tsx":"16","/Users/henry/Desktop/prj/YGUP/frontend/src/pages/user/predicttest.tsx":"17","/Users/henry/Desktop/prj/YGUP/frontend/src/pages/user/pwsearch.tsx":"18","/Users/henry/Desktop/prj/YGUP/frontend/src/pages/user/pwsearch_result.tsx":"19","/Users/henry/Desktop/prj/YGUP/frontend/src/pages/user/userinfo.tsx":"20","/Users/henry/Desktop/prj/YGUP/frontend/src/pages/user/userinfo_update.tsx":"21","/Users/henry/Desktop/prj/YGUP/frontend/src/pages/user/idsearch_result.tsx":"22","/Users/henry/Desktop/prj/YGUP/frontend/src/pages/user/idsearch.tsx":"23","/Users/henry/Desktop/prj/YGUP/frontend/src/pages/user/pwupdate.tsx":"24","/Users/henry/Desktop/prj/YGUP/frontend/src/pages/user/bookmark.tsx":"25","/Users/henry/Desktop/prj/YGUP/frontend/src/pages/user/manage.tsx":"26","/Users/henry/Desktop/prj/YGUP/frontend/src/pages/user/coverletter_write.tsx":"27","/Users/henry/Desktop/prj/YGUP/frontend/src/pages/user/newpredict.tsx":"28","/Users/henry/Desktop/prj/YGUP/frontend/src/pages/user/coverletter_update.tsx":"29","/Users/henry/Desktop/prj/YGUP/frontend/src/reducers/userReducer.tsx":"30","/Users/henry/Desktop/prj/YGUP/frontend/src/pages/admin/company_basic_list.tsx":"31","/Users/henry/Desktop/prj/YGUP/frontend/src/pages/admin/user_list.tsx":"32","/Users/henry/Desktop/prj/YGUP/frontend/src/pages/admin/info_update.tsx":"33","/Users/henry/Desktop/prj/YGUP/frontend/src/pages/admin/write.tsx":"34","/Users/henry/Desktop/prj/YGUP/frontend/src/pages/admin/info.tsx":"35","/Users/henry/Desktop/prj/YGUP/frontend/src/pages/admin/info_delete.tsx":"36","/Users/henry/Desktop/prj/YGUP/frontend/src/reducers/modalReducer.tsx":"37","/Users/henry/Desktop/prj/YGUP/frontend/src/reducers/headerReducer.tsx":"38","/Users/henry/Desktop/prj/YGUP/frontend/src/util/axiosApi.tsx":"39","/Users/henry/Desktop/prj/YGUP/frontend/src/pages/components/basicModal.tsx":"40","/Users/henry/Desktop/prj/YGUP/frontend/src/pages/admin/user_delete.tsx":"41","/Users/henry/Desktop/prj/YGUP/frontend/src/pages/components/user.tsx":"42","/Users/henry/Desktop/prj/YGUP/frontend/src/pages/components/pwvalidation.tsx":"43"},{"size":1709,"mtime":1675004178815,"results":"44","hashOfConfig":"45"},{"size":425,"mtime":1674747893096,"results":"46","hashOfConfig":"45"},{"size":3623,"mtime":1675004178814,"results":"47","hashOfConfig":"45"},{"size":2523,"mtime":1674918815468,"results":"48","hashOfConfig":"45"},{"size":443,"mtime":1674918815468,"results":"49","hashOfConfig":"45"},{"size":348,"mtime":1674959902220,"results":"50","hashOfConfig":"45"},{"size":8164,"mtime":1675004178817,"results":"51","hashOfConfig":"45"},{"size":1943,"mtime":1674747893093,"results":"52","hashOfConfig":"45"},{"size":11415,"mtime":1674918815467,"results":"53","hashOfConfig":"45"},{"size":11259,"mtime":1674747893093,"results":"54","hashOfConfig":"45"},{"size":10379,"mtime":1674959902218,"results":"55","hashOfConfig":"45"},{"size":11299,"mtime":1674918815466,"results":"56","hashOfConfig":"45"},{"size":5246,"mtime":1674747893093,"results":"57","hashOfConfig":"45"},{"size":11341,"mtime":1674918815466,"results":"58","hashOfConfig":"45"},{"size":5112,"mtime":1675006781812,"results":"59","hashOfConfig":"45"},{"size":7165,"mtime":1675004178818,"results":"60","hashOfConfig":"45"},{"size":1774,"mtime":1674747893095,"results":"61","hashOfConfig":"45"},{"size":3362,"mtime":1674747893095,"results":"62","hashOfConfig":"45"},{"size":1964,"mtime":1674747893095,"results":"63","hashOfConfig":"45"},{"size":5178,"mtime":1674918815471,"results":"64","hashOfConfig":"45"},{"size":4592,"mtime":1674747893095,"results":"65","hashOfConfig":"45"},{"size":2751,"mtime":1674747893094,"results":"66","hashOfConfig":"45"},{"size":3402,"mtime":1675004178817,"results":"67","hashOfConfig":"45"},{"size":3280,"mtime":1674918815471,"results":"68","hashOfConfig":"45"},{"size":11982,"mtime":1674959902219,"results":"69","hashOfConfig":"45"},{"size":14462,"mtime":1674959902220,"results":"70","hashOfConfig":"45"},{"size":5315,"mtime":1674747893094,"results":"71","hashOfConfig":"45"},{"size":6044,"mtime":1674747893095,"results":"72","hashOfConfig":"45"},{"size":5381,"mtime":1674747893093,"results":"73","hashOfConfig":"45"},{"size":544,"mtime":1674918815472,"results":"74","hashOfConfig":"45"},{"size":4390,"mtime":1675004178815,"results":"75","hashOfConfig":"45"},{"size":4076,"mtime":1675004178816,"results":"76","hashOfConfig":"45"},{"size":7128,"mtime":1675004170353,"results":"77","hashOfConfig":"45"},{"size":9158,"mtime":1675004178816,"results":"78","hashOfConfig":"45"},{"size":5003,"mtime":1675004178815,"results":"79","hashOfConfig":"45"},{"size":1850,"mtime":1675004178815,"results":"80","hashOfConfig":"45"},{"size":591,"mtime":1675004178818,"results":"81","hashOfConfig":"45"},{"size":776,"mtime":1674747893096,"results":"82","hashOfConfig":"45"},{"size":414,"mtime":1675004178819,"results":"83","hashOfConfig":"45"},{"size":6215,"mtime":1675007175425,"results":"84","hashOfConfig":"45"},{"size":1823,"mtime":1675004178816,"results":"85","hashOfConfig":"45"},{"size":1856,"mtime":1674959902219,"results":"86","hashOfConfig":"45"},{"size":3834,"mtime":1675004178817,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"dcwaqd",{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"94"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"94"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"94"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"94"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"94"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"94"},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"94"},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"94"},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"94"},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"200","messages":"201","suppressedMessages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","suppressedMessages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","suppressedMessages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","suppressedMessages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"212","messages":"213","suppressedMessages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","suppressedMessages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"218","messages":"219","suppressedMessages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","suppressedMessages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"94"},{"filePath":"225","messages":"226","suppressedMessages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/henry/Desktop/prj/YGUP/frontend/src/index.tsx",[],[],"/Users/henry/Desktop/prj/YGUP/frontend/src/reportWebVitals.ts",[],[],[],"/Users/henry/Desktop/prj/YGUP/frontend/src/App.tsx",["228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244"],[],"/Users/henry/Desktop/prj/YGUP/frontend/src/pages/header.tsx",["245","246"],[],"import React from 'react';\nimport '../App.css';\nimport IconButton from '@mui/material/IconButton';\nimport PersonAddIcon from '@mui/icons-material/PersonAdd';\nimport Button from '@mui/material/Button';\nimport { useNavigate } from 'react-router-dom'\nimport logo from '../img/yogiuplogo.png'\nimport { Stack, Box } from '@mui/system';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RootState } from '../reducers/index'\nimport { set } from '../reducers/userReducer'\n\nconst Header: React.FC = () => {\n  const navigate = useNavigate();\n\n  const goHome = () => {\n    navigate('/')\n  };\n  const goCompany = () => {\n    navigate('/board_list')\n  };\n  const goMylist = () => {\n    navigate('/board_mylist')\n  };\n  const goPredict = () => {\n    navigate('/board_predict')\n  };\n  const goUserinfo = () => {\n    navigate('/userinfo')\n  };\n  const goJoin = () => {\n    navigate('/join')\n  };\n  const goLogin = () => {\n    navigate('/login')\n  };\n  const dispatch = useDispatch();\n\n  const doLogOut = () => {\n    dispatch(set({type: '', id: ''}));\n  };\n\n  const currentUser = useSelector((state: RootState) => state.userReducer.type);\n\n  const LoginButton = () => {\n    if(currentUser == ''){\n      return <Button variant=\"text\" onClick={() => { goLogin() }}>LogIn</Button>\n    }\n    else {\n      return <Button variant=\"text\" onClick={() => { doLogOut() }}>LogOut</Button>\n    }\n  }\n\n  return (\n      <header className=\"App-header\">\n        <Stack direction={'row'}>\n        <div className='App-header-menu-icon'>\n          <Box\n              component=\"img\"\n              sx={{ height: 50, pl:5 }}\n              src={logo}\n              onClick={() => { goHome() }}\n            />\n          </div>\n          <nav className='App-header-nav'>\n            <ul>\n              <li>\n              <Button variant=\"text\" size=\"large\" onClick={() => { goCompany() }}>기업</Button>\n              </li>\n              <li>\n              <Button variant=\"text\" size=\"large\" onClick={() => { goMylist() }}>자소서</Button>\n              </li>\n              <li>\n              <Button variant=\"text\" size=\"large\" onClick={() => { goPredict() }}>합격예측</Button>\n              </li>\n            </ul>\n          </nav>\n          <div className='App-header-profile-icons'>\n            <IconButton size=\"large\" onClick={() => { goUserinfo() }}>\n              <PersonAddIcon fontSize=\"inherit\"/>\n            </IconButton>\n            <LoginButton/>\n          </div>\n        </Stack>\n      </header>\n  );\n}\n\nexport default Header;","/Users/henry/Desktop/prj/YGUP/frontend/src/pages/footer.tsx",[],[],"/Users/henry/Desktop/prj/YGUP/frontend/src/reducers/index.tsx",[],[],"/Users/henry/Desktop/prj/YGUP/frontend/src/pages/home.tsx",["247"],[],"/Users/henry/Desktop/prj/YGUP/frontend/src/pages/board/board_predict.tsx",[],[],"/Users/henry/Desktop/prj/YGUP/frontend/src/pages/board/board_mylist_chek.tsx",["248","249"],[],"import { Box, Button, Checkbox, IconButton, Paper, styled, Table, TableBody, TableCell, tableCellClasses, TableContainer, TableHead, TablePagination, TableRow, TableSortLabel, Toolbar, Tooltip, Typography } from '@mui/material';\nimport * as React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { visuallyHidden } from '@mui/utils';\nimport { alpha } from '@mui/material/styles';\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n    [`&.${tableCellClasses.head}`]: {\n      backgroundColor: '#009688',\n      color: theme.palette.common.white,\n    },\n    [`&.${tableCellClasses.body}`]: {\n      fontSize: 14,\n    },\n  }));\n\ninterface Data {\n    name: string,\n    time: string,\n    title: string,\n}\n\ninterface HeadCell {\n    disablePadding: boolean;\n    id: keyof Data;\n    label: string;\n    numeric: boolean;\n}\n\nfunction createData(\n    id: string,\n    name: string,\n    title: string,\n    time: string,\n) {\nreturn { id, name, title, time };\n}\n\nconst rows = [\n    createData('1', 'Snow','이력서_센스있고 손이 빠릅니다',  '23년 01월 01일' ),\n    createData('2', 'kakao', '카카오와 함께 도전하겠습니다.', '23년 01월 01일' ),\n    createData('3', 'coopang','쿠팡의 성장 가능성에 주목하겠습니다', '23년 01월 02일' ),\n    createData('4', 'naver', '변화에 맞춰 도전하는 자세', '23년 01월 03일' ),\n    createData('5', 'toss', '소통과 신뢰로 목료달성하기', '23년 01월 04일' ),\n    createData('6', 'namu', '함께일 때 빛나는, 나무와 같은사람', '23년 01월 05일'),\n];\n\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n    if (b[orderBy] < a[orderBy]) {\n      return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n      return 1;\n    }\n    return 0;\n  }\n  \n  type Order = \"asc\" | \"desc\";\n  \n  function getComparator<Key extends keyof any>(\n    order: Order,\n    orderBy: Key\n  ): (\n    a: { [key in Key]: number | string },\n    b: { [key in Key]: number | string }\n  ) => number {\n    return order === \"desc\"\n      ? (a, b) => descendingComparator(a, b, orderBy)\n      : (a, b) => -descendingComparator(a, b, orderBy);\n  }\n\nfunction stableSort<T>(\n    array: readonly T[],\n    comparator: (a: T, b: T) => number\n  ) \n{\n    const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\n    stabilizedThis.sort((a, b) => {\n      const order = comparator(a[0], b[0]);\n      if (order !== 0) {\n        return order;\n      }\n      return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells: readonly HeadCell[] = [\n    {\n        id: 'name',\n        numeric: true,\n        disablePadding: false,\n        label: '기업명',\n    },\n    \n    {\n        id: 'title',\n        numeric: true,\n        disablePadding: false,\n        label: '제목',\n    },\n\n    {\n        id: 'time',\n        numeric: true,\n        disablePadding: false,\n        label: '작성시간',\n    },\n];\n\n\n  interface EnhancedTableProps {\n    numSelected: number;\n    onRequestSort: (event: React.MouseEvent<unknown>, property: keyof Data) => void;\n    onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\n    order: Order;\n    orderBy: string;\n    rowCount: number;\n}\n  \n  function EnhancedTableHead(props: EnhancedTableProps) {\n    const { order, orderBy, onRequestSort } =\n      props;\n    const createSortHandler =\n      (property: keyof Data) => (event: React.MouseEvent<unknown>) => {\n        onRequestSort(event, property);\n      };\n  \n    return (\n      <TableHead>\n        <TableRow>\n          <StyledTableCell padding=\"checkbox\">\n          \n          </StyledTableCell>\n          {headCells.map((headCell) => (\n            <StyledTableCell\n              key={headCell.id}\n              align='center'\n              padding={headCell.disablePadding ? 'none' : 'normal'}\n              sortDirection={orderBy === headCell.id ? order : false}\n            >\n              <TableSortLabel\n                active={orderBy === headCell.id}\n                direction={orderBy === headCell.id ? order : 'asc'}\n                onClick={createSortHandler(headCell.id)}\n              >\n                {headCell.label}\n                {orderBy === headCell.id ? (\n                  <Box component=\"span\" sx={visuallyHidden}>\n                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                  </Box>\n                ) : null}\n              </TableSortLabel>\n            </StyledTableCell>\n          ))}\n        </TableRow>\n      </TableHead>\n    );\n  }\n\ninterface EnhancedTableToolbarProps {\n    numSelected: number;\n  }\n\nfunction EnhancedTableToolbar(props: EnhancedTableToolbarProps) {\n    const { numSelected } = props;\n    const navigate = useNavigate();\n    const goNewprdict = () => {\n       navigate('/newpredict')\n    };\n\n    return (\n        <Toolbar\n        sx={{\n            pl: { sm: 2 },\n            pr: { xs: 1, sm: 1 },\n            ...(numSelected > 0 && {\n            bgcolor: (theme) =>\n                alpha(theme.palette.primary.main, theme.palette.action.activatedOpacity),\n            }),\n        }}\n        >\n        <Typography\n          sx={{ flex: '1 1 100%' }}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >  \n        </Typography>    \n        {numSelected > 0 ? (\n        <Typography>\n            <Button variant=\"outlined\" size=\"small\" \n                    onClick={() => { goNewprdict()}}\n                    sx={{ width: 100, \n                          mt:3, \n                          mx:'auto', \n                          color:'#ffff', \n                          backgroundColor: '#009688', \n                          borderColor:'#434343'\n                        }} \n                   >\n                          선택\n                   </Button>\n        </Typography>\n      ):(\n        <Typography>\n           <IconButton>\n            </IconButton>\n        </Typography>\n      )}\n    </Toolbar>\n);\n}\n\nconst Board_mylist_chek: React.FC = () => {\n \n    const navigate = useNavigate();\n      \n    const [order, setOrder] = React.useState<Order>('asc');\n    const [orderBy, setOrderBy] = React.useState<keyof Data>('name');\n    const [selected, setSelected] = React.useState<readonly string[]>([]);\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  \n    const handleRequestSort = (\n      event: React.MouseEvent<unknown>,\n      property: keyof Data,\n    ) => {\n      const isAsc = orderBy === property && order === 'asc';\n      setOrder(isAsc ? 'desc' : 'asc');\n      setOrderBy(property);\n    };\n  \n    const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\n      if (event.target.checked) {\n        const newSelected = rows.map((n) => n.name);\n        setSelected(newSelected);\n        return;\n      }\n      setSelected([]);\n    };\n  \n    const handleClick = (event: React.MouseEvent<unknown>, name: string) => {\n      const selectedIndex = selected.indexOf(name);\n      let newSelected: readonly string[] = [];\n  \n      if (selectedIndex === -1) {\n        newSelected = newSelected.concat(selected, name);\n      } else if (selectedIndex === 0) {\n        newSelected = newSelected.concat(selected.slice(1));\n      } else if (selectedIndex === selected.length - 1) {\n        newSelected = newSelected.concat(selected.slice(0, -1));\n      } else if (selectedIndex > 0) {\n        newSelected = newSelected.concat(\n          selected.slice(0, selectedIndex),\n          selected.slice(selectedIndex + 1),\n        );\n      }\n  \n      setSelected(newSelected);\n    };\n  \n    const handleChangePage = (event: unknown, newPage: number) => {\n      setPage(newPage);\n    };\n  \n    const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n      setRowsPerPage(parseInt(event.target.value, 10));\n      setPage(0);\n    };\n  \n    const isSelected = (name: string) => selected.indexOf(name) !== -1;\n\n    return (\n        <div className='board_mylist_chek'>\n                  <Box sx={{ width: '100%' }}>\n                  <Paper sx={{ width: '100%', mb: 2 }}>\n                  <TableContainer>\n                  <Table\n                      sx={{ Width: '100%'}}\n                      aria-labelledby=\"tableTitle\"\n                  >\n                    <EnhancedTableHead\n                          numSelected={selected.length}\n                          order={order}\n                          orderBy={orderBy}\n                          onSelectAllClick={handleSelectAllClick}\n                          onRequestSort={handleRequestSort}\n                          rowCount={rows.length}\n                    />\n                      <TableBody>\n                      {stableSort(rows, getComparator(order, orderBy))\n                          .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                          .map((row, index) => {\n                          const isItemSelected = isSelected(row.id);\n                          const labelId = `enhanced-table-checkbox-${index}`;\n\n                          return (\n                              <TableRow\n                                  hover\n                                  onClick={(event) => handleClick(event, row.id)}\n                                  role=\"checkbox\"\n                                  aria-checked={isItemSelected}\n                                  tabIndex={-1}\n                                  key={row.id}\n                                  selected={isItemSelected}\n                              >\n                              <TableCell padding=\"checkbox\">\n                                  <Checkbox\n                                      color=\"primary\"\n                                      icon={<Checkbox/>}\n                                      checkedIcon={<Checkbox/>}\n                                      checked={isItemSelected}\n                                      inputProps={{\n                                          'aria-labelledby': labelId,\n                                      }}\n                                  />\n                              </TableCell>\n                              <TableCell\n                                  component=\"th\"\n                                  id={labelId}\n                                  scope=\"row\"\n                                  align=\"center\"\n                              >\n                                  {row.name}\n                              </TableCell>\n                              <TableCell align=\"center\">{row.title}</TableCell>\n                              <TableCell align=\"center\">{row.time}</TableCell>\n                              </TableRow>\n                          );\n                          })}\n                      </TableBody>\n                  </Table>\n                  </TableContainer>\n                  <TablePagination\n                      rowsPerPageOptions={[5]}\n                      component=\"div\"\n                      count={rows.length}\n                      rowsPerPage={rowsPerPage}\n                      page={page}\n                      onPageChange={handleChangePage}\n                      onRowsPerPageChange={handleChangeRowsPerPage}\n                  />\n              </Paper>\n              <EnhancedTableToolbar numSelected={selected.length}/>\n            </Box>\n        </div>\n    \n    );\n}\n\nexport default Board_mylist_chek;","/Users/henry/Desktop/prj/YGUP/frontend/src/pages/board/board_mylist.tsx",["250","251","252"],[],"import { useSelector, useDispatch } from 'react-redux';\nimport { RootState } from '../../reducers';\nimport { set } from '../../reducers/headerReducer';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport { Box, Button, IconButton, Paper, styled, Table, TableBody, TableCell, tableCellClasses, TableContainer, TableHead, TablePagination, TableRow, TableSortLabel, Toolbar, Tooltip, Typography } from '@mui/material';\nimport * as React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { visuallyHidden } from '@mui/utils';\nimport EditIcon from '@mui/icons-material/Edit';\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: '#009688',\n    color: theme.palette.common.white,\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 14,\n  },\n}));\n\ninterface Data {\n  name: string,\n  time: string,\n  title: string,\n  edit: string,\n}\n\nfunction createData(\n  id: string,\n  name: string,\n  title: string,\n  time: string,\n  edit: string,\n) {\nreturn { id, name, title, time, edit };\n}\n\nconst rows = [\n  createData('1', '가','제목1',  '23년 01월 01일', 'Edit'),\n  createData('2', '나', '제목2', '23년 01월 01일', 'Edit'),\n  createData('3', '다','제목3', '23년 01월 02일', 'Edit' ),\n  createData('4', '라', '제목4', '23년 01월 03일', 'Edit' ),\n  createData('5', '마', '제목5', '23년 01월 04일', 'Edit' ),\n  createData('6', '바', '제목6', '23년 01월 05일', 'Edit' ),\n  createData('7', '사','제목7',  '23년 01월 01일', 'Edit'),\n  createData('8', '아', '제목8', '23년 01월 01일', 'Edit'),\n  createData('9', '자','제목9', '23년 01월 02일', 'Edit' ),\n  createData('10', '차', '제목10', '23년 01월 03일', 'Edit' ),\n  createData('11', '카', '제목11', '23년 01월 04일', 'Edit' ),\n  createData('12', '타', '제목12', '23년 01월 05일', 'Edit' ),\n];\n\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\ntype Order = 'asc' | 'desc';\n\nfunction getComparator<Key extends keyof any>(\n  order: Order,\n  orderBy: Key,\n): (\n  a: { [key in Key]: number | string },\n  b: { [key in Key]: number | string },\n) => number {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort<T>(array: readonly T[], comparator: (a: T, b: T) => number) {\n  const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) {\n      return order;\n    }\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\ninterface HeadCell {\n  disablePadding: boolean;\n  id: keyof Data;\n  label: string;\n  numeric: boolean;\n}\n\nconst headCells: readonly HeadCell[] = [\n  {\n      id: 'name',\n      numeric: true,\n      disablePadding: false,\n      label: '기업명',\n  },\n  \n  {\n      id: 'title',\n      numeric: true,\n      disablePadding: false,\n      label: '제목',\n  },\n\n  {\n      id: 'time',\n      numeric: true,\n      disablePadding: false,\n      label: '작성시간',\n  },\n\n  {\n      id: 'edit',\n      numeric: true,\n      disablePadding: false,\n      label: '수정',\n  },\n];\n\ninterface EnhancedTableProps {\n  numSelected: number;\n  onRequestSort: (event: React.MouseEvent<unknown>, property: keyof Data) => void;\n  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  order: Order;\n  orderBy: string;\n  rowCount: number;\n}\n\nfunction EnhancedTableHead(props: EnhancedTableProps) {\n  const { order, orderBy, onRequestSort } =\n    props;\n  const createSortHandler =\n    (property: keyof Data) => (event: React.MouseEvent<unknown>) => {\n      onRequestSort(event, property);\n    };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headCells.map((headCell) => (\n          <StyledTableCell\n            key={headCell.id}\n            align='center'\n            padding={headCell.disablePadding ? 'none' : 'normal'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <Box component=\"span\" sx={visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </StyledTableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\ninterface EnhancedTableProps {\n  numSelected: number;\n  onRequestSort: (event: React.MouseEvent<unknown>, property: keyof Data) => void;\n  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  order: Order;\n  orderBy: string;\n  rowCount: number;\n}\n\ninterface EnhancedTableToolbarProps {\n  numSelected: number;\n}\n\nconst Board_MyList: React.FC = () => {\n  \n  const currentPage = useSelector((state: RootState) => state.headerReducer.page);\n  console.log(currentPage);\n  const dispatch = useDispatch();\n  dispatch(set('company'));\n\n  const navigate = useNavigate();\n\n  const goCoverletter_write = () => {\n    navigate('/coverletter_write')\n};\nconst goCoverLetter_Update = () => {\n  navigate('/coverletter_update')\n};\n  const [order, setOrder] = React.useState<Order>('asc');\n  const [orderBy, setOrderBy] = React.useState<keyof Data>('name');\n  const [selected, setSelected] = React.useState<readonly string[]>([]);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (\n    event: React.MouseEvent<unknown>,\n    property: keyof Data,\n  ) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.checked) {\n      const newSelected = rows.map((n) => n.name);\n      setSelected(newSelected);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event: React.MouseEvent<unknown>, name: string) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected: readonly string[] = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = (name: string) => selected.indexOf(name) !== -1;\n\n  return (\n    <div className='board_MyList'>  \n    <Box sx={{ backgroundColor:'#E6EAF3', height:300, borderBottom:10, borderBlockColor:'#E6EAF3'}}>\n      <Box sx={{ display: 'flex', \n                flexWrap: 'wrap', \n                  '& > :not(style)' : { \n                m: 1, \n                marginTop:6,\n                marginBottom:4,\n                padding:3,\n                minwidth: 128, \n                height: 150,\n                marginLeft:25,\n                },\n              }}\n      >\n        <Card  sx={{height:100, width:300}} variant=\"outlined\">\n      <CardContent>\n        <Typography sx={{ mb: 1 }}>\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button size=\"large\" onClick={() => { goCoverletter_write()}}>자소서 작성</Button>\n      </CardActions>\n      </Card>\n      </Box> \n      </Box>\n      <Box sx={{ width: '100%', mb: 15 }}>\n        <Paper sx={{ width: '100%', mb: 2 }}>\n        <Typography\n            sx={{ flex: '1 1 100%' }}\n            variant=\"h5\"\n            id=\"tableTitle\"\n            component=\"div\"\n            marginLeft={3}\n            paddingTop={4}\n            paddingBottom={5}\n            >\n            최근 목록\n            </Typography>\n          <TableContainer>\n            <Table\n              sx={{ minWidth: 750 }}\n              aria-labelledby=\"tableTitle\"\n            >\n              <EnhancedTableHead\n                numSelected={selected.length}\n                order={order}\n                orderBy={orderBy}\n                onSelectAllClick={handleSelectAllClick}\n                onRequestSort={handleRequestSort}\n                rowCount={rows.length}\n              />\n              <TableBody>\n                {stableSort(rows, getComparator(order, orderBy))\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                  .map((row, index) => {\n                    const isItemSelected = isSelected(row.name);\n\n                    return (\n                      <TableRow\n                        hover\n                        onClick={(event) => handleClick(event, row.name)}\n                        aria-checked={isItemSelected}\n                        tabIndex={-1}\n                        key={row.name}\n                        selected={isItemSelected}\n                      >\n                        <TableCell\n                          component=\"th\"\n                          scope=\"row\"\n                          align=\"center\"\n                        >\n                          {row.name}\n                        </TableCell>\n                        <TableCell align=\"center\">{row.title}</TableCell>\n                        <TableCell align=\"center\">{row.time}</TableCell>\n                        <TableCell align=\"center\">\n                        <Button\n                            color=\"primary\"\n                            size=\"medium\"\n                            variant=\"text\"\n                            onClick={() => { goCoverLetter_Update() } }\n                            >\n                              Edit\n                            <IconButton aria-label=\"Edit\" size=\"small\" disabled color=\"primary\" >\n                              <EditIcon fontSize=\"small\"/>\n                            </IconButton>\n                       </Button>\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n            rowsPerPageOptions={[5]}\n            component=\"div\"\n            count={rows.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onPageChange={handleChangePage}\n            onRowsPerPageChange={handleChangeRowsPerPage}\n          />\n        </Paper>\n      </Box>\n    </div>  \n  );\n}\n\nexport default Board_MyList;","/Users/henry/Desktop/prj/YGUP/frontend/src/pages/board/board_list.tsx",["253","254","255","256"],[],"import { Box, Stack } from '@mui/system';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { useNavigate } from 'react-router-dom';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport TableSortLabel from '@mui/material/TableSortLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport { visuallyHidden } from '@mui/utils';\nimport React from 'react';\nimport BookmarkBorderIcon from '@mui/icons-material/BookmarkBorder';\nimport BookmarkIcon from '@mui/icons-material/Bookmark';\nimport Paper from '@mui/material/Paper';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RootState } from '../../reducers';\nimport { set } from '../../reducers/headerReducer';\n\n\n\ninterface Data {\n  location: string;\n  keyword: string;\n  name: string;\n}\n\nfunction createData(\n  name: string,\n  location: string,\n  keyword: string,\n): Data {\n  return {\n    name,\n    location,\n    keyword,\n  };\n}\n\nconst rows = [\n  createData('기업 1', \"위치2\", \"키워드\"),\n  createData('기업 2', \"위치4\", \"키워드\"),\n  createData('기업 3',  \"위치5\", \"키워드\"),\n  createData('기업 4',  \"위치2\", \"키워드\"),\n  createData('기업 5',  \"위치1\", \"키워드\"),\n  createData('기업 6',  \"위치7\", \"키워드\"),\n  createData('기업 7',  \"위치6\", \"키워드\"),\n  createData('기업 8',  \"위치9\", \"키워드\"),\n  createData('기업 9', \"위치8\", \"키워드\"),\n  createData('기업 10',  \"위치7\", \"키워드\"),\n  createData('기업 11',  \"위치3\", \"키워드\"),\n  createData('기업 12',  \"위치1\", \"키워드\"),\n  createData('기업 13',  \"위치6\", \"키워드\"),\n];\n\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\ntype Order = 'asc' | 'desc';\n\nfunction getComparator<Key extends keyof any>(\n  order: Order,\n  orderBy: Key,\n): (\n  a: { [key in Key]: number | string },\n  b: { [key in Key]: number | string },\n) => number {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort<T>(array: readonly T[], comparator: (a: T, b: T) => number) {\n  const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) {\n      return order;\n    }\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\ninterface HeadCell {\n  disablePadding: boolean;\n  id: keyof Data;\n  label: string;\n  numeric: boolean;\n}\n\nconst headCells: readonly HeadCell[] = [\n  {\n    id: 'name',\n    numeric: true,\n    disablePadding: false,\n    label: '기업명',\n  },\n  {\n    id: 'location',\n    numeric: true,\n    disablePadding: false,\n    label: '위치',\n  },\n  {\n    id: 'keyword',\n    numeric: true,\n    disablePadding: false,\n    label: '키워드',\n  },\n];\n\ninterface EnhancedTableProps {\n  numSelected: number;\n  onRequestSort: (event: React.MouseEvent<unknown>, property: keyof Data) => void;\n  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  order: Order;\n  orderBy: string;\n  rowCount: number;\n}\n\nfunction EnhancedTableHead(props: EnhancedTableProps) {\n  const { order, orderBy, onRequestSort } =\n    props;\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align='center'\n            padding={headCell.disablePadding ? 'none' : 'normal'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <Box component=\"span\" sx={visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\ninterface EnhancedTableProps {\n  numSelected: number;\n  onRequestSort: (event: React.MouseEvent<unknown>, property: keyof Data) => void;\n  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  order: Order;\n  orderBy: string;\n  rowCount: number;\n}\n\nconst Board_List: React.FC = () => {\n  \n  const [email, setemail] = React.useState('');\n    const emailAdress = [\n        'gmail.com',\n        'naver.com',\n        'hanmail.net',\n        'nate.net',\n    ];\n\n  const currentPage = useSelector((state: RootState) => state.headerReducer.page);\n  console.log(currentPage);\n  const dispatch = useDispatch();\n  dispatch(set('company'));\n\n  const navigate = useNavigate();\n\n  const goLike = (state: number) => {\n    navigate('/board_like', { state: state })\n  };\n  const goFav = (state: number) => {\n    navigate('/board_Fav', { state: state })\n  };\n\n  const [order, setOrder] = React.useState<Order>('asc');\n  const [orderBy, setOrderBy] = React.useState<keyof Data>('location');\n  const [selected, setSelected] = React.useState<readonly string[]>([]);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (\n    event: React.MouseEvent<unknown>,\n    property: keyof Data,\n  ) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  \n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.checked) {\n      const newSelected = rows.map((n) => n.name);\n      setSelected(newSelected);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = (name: string) => selected.indexOf(name) !== -1;\n\nfunction a11yProps(index: number) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n}\n\nconst handleChange = (event: React.SyntheticEvent, newValue: number) => {\n  setValue(newValue);\n};\n\nconst [value, setValue] = React.useState(0);\n\n  return (\n    <div className='board_list'>  \n      <Box sx={{ backgroundColor:'#009688', border: '#26a69a', height:60, pt:3 }}>\n        <Stack direction=\"row\">\n          <Box sx={{ height:40, '& .MuiSvgIcon-root': { height:'3rem' } }}  >\n            <SearchIcon sx={{ color: 'white' }}/>\n          </Box>\n          <input type=\"text\" className='company_input'/>\n        </Stack>\n      </Box>\n      <Box sx={{ backgroundColor:'#ffff', borderBottom: 1, borderColor: 'divider' }}>\n        <Tabs value={value} onChange={handleChange} aria-label=\"basic tabs example\">\n          <Tab label=\"전체\" {...a11yProps(0)} onClick={() => {  }}/>\n          <Tab label=\"실시간 급상승\" {...a11yProps(1)} onClick={() => { goLike(1); }}/>\n          <Tab label=\"인기 기업\" {...a11yProps(2)} onClick={() => { goFav(2); }}/>\n        </Tabs>\n      </Box>\n      <Box sx={{ width: '100%' }}>\n        <Paper sx={{ width: '100%', mb: 2 }}>\n          <TableContainer>\n            <Table\n              sx={{ minWidth: 750 }}\n              aria-labelledby=\"tableTitle\"\n            >\n              <EnhancedTableHead\n                numSelected={selected.length}\n                order={order}\n                orderBy={orderBy}\n                onSelectAllClick={handleSelectAllClick}\n                onRequestSort={handleRequestSort}\n                rowCount={rows.length}\n              />\n              <TableBody>\n                {stableSort(rows, getComparator(order, orderBy))\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                  .map((row, index) => {\n                    const isItemSelected = isSelected(row.name);\n                    const labelId = `enhanced-table-checkbox-${index}`;\n\n                    return (\n                      <TableRow\n                        hover\n                        role=\"checkbox\"\n                        aria-checked={isItemSelected}\n                        tabIndex={-1}\n                        key={row.name}\n                        selected={isItemSelected}\n                      >\n                        <TableCell padding=\"checkbox\">\n                          <Checkbox\n                            color=\"primary\"\n                            icon={<BookmarkBorderIcon />}\n                            checkedIcon={<BookmarkIcon />}\n                            checked={isItemSelected}\n                            inputProps={{\n                              'aria-labelledby': labelId,\n                            }}\n                          />\n                        </TableCell>\n                        <TableCell\n                          component=\"th\"\n                          id={labelId}\n                          scope=\"row\"\n                          align=\"center\"\n                        >\n                          {row.name}\n                        </TableCell>\n                        <TableCell align=\"center\">{row.location}</TableCell>\n                        <TableCell align=\"center\">{row.keyword}</TableCell>\n                      </TableRow>\n                    );\n                  })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n            rowsPerPageOptions={[5]}\n            component=\"div\"\n            count={rows.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onPageChange={handleChangePage}\n            onRowsPerPageChange={handleChangeRowsPerPage}\n          />\n        </Paper>\n      </Box>\n    </div>  \n  );\n}\n\nexport default Board_List ;","/Users/henry/Desktop/prj/YGUP/frontend/src/pages/board/board_Fav.tsx",[],[],"/Users/henry/Desktop/prj/YGUP/frontend/src/pages/board/board_predict_write.tsx",[],[],"/Users/henry/Desktop/prj/YGUP/frontend/src/pages/board/board_like.tsx",[],[],"/Users/henry/Desktop/prj/YGUP/frontend/src/pages/user/login.tsx",["257","258"],[],"/Users/henry/Desktop/prj/YGUP/frontend/src/pages/user/join.tsx",["259","260","261","262","263","264","265","266","267","268"],[],"/Users/henry/Desktop/prj/YGUP/frontend/src/pages/user/predicttest.tsx",["269"],[],"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport { Stack, TextField, Typography } from '@mui/material';\n\nconst PredictTest: React.FC = () => {\n    \n      \n    return (\n        <div className='predicttest'>\n            <Box height={'40%'} sx={{mb:1}}>\n                <Stack\n                    direction=\"column\"\n                    justifyContent=\"center\"\n                    alignItems=\"center\"\n                    spacing={2}\n                    sx={{mt:5}}\n                >\n                    <Typography>합격 예측 기업 : 확률%</Typography>\n                    <Box>키워드 단어들</Box>\n                </Stack>\n            </Box>\n            <Box sx={{ bgcolor: 'white', mx:'auto', alignContent: 'center' }}>\n                <Stack\n                    direction=\"column\"\n                    justifyContent=\"center\"\n                    alignItems=\"center\"\n                    spacing={2}\n                    sx={{\n                        paddingBottom:20\n                    }}\n                >\n                    <Typography sx={{mt:5}}>자소서1</Typography>\n                    <Box sx={{ display: 'flex', \n                               width: '80%', \n                               height: 400,\n                               border: '1px solid', \n                               borderColor: 'grey.500', \n                               borderRadius: 2,  \n                               mx:'auto', \n                               my:'auto', \n                               mb:1 \n                            }} \n                    >\n                        <Typography>자소서 내용</Typography>\n                    </Box>\n                </Stack>\n            </Box>\n        </div>\n    );\n}\nexport default PredictTest;","/Users/henry/Desktop/prj/YGUP/frontend/src/pages/user/pwsearch.tsx",[],[],"/Users/henry/Desktop/prj/YGUP/frontend/src/pages/user/pwsearch_result.tsx",[],[],"/Users/henry/Desktop/prj/YGUP/frontend/src/pages/user/userinfo.tsx",["270","271"],[],"import { Box, Button, Stack, Tab, Tabs, Typography } from '@mui/material';\nimport * as React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../reducers'\n\nconst UserInfo: React.FC = () => {\n    const navigate = useNavigate();\n    \n    const currentUser = useSelector((state: RootState) => state.userReducer.id);\n\n    const [id, setIdValue] = React.useState(currentUser);\n\n    React.useEffect(()=>{\n        if(id == ''){\n            alert('로그인 후  이용해주세요')\n            navigate('/')\n        }\n    })\n\n    const goPwUpdate = () => {\n        navigate('/pwupdate')\n    };\n    const goUserInfo = () => {\n        navigate('/userinfo')\n    };\n    const goBookmark = (state: number) => {\n        navigate('/bookmark',  { state: state })\n    };\n    const goManage = (state: number) => {\n        navigate('/manage',  { state: state })\n    };\n    const goUserInfo_Update = () => {\n        navigate('/userinfo_update')\n    };\n\n    function a11yProps(index: number) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n    }\n    const handleChange = (event: React.SyntheticEvent, newValue: number) => {\n        setValue(newValue);\n      };\n    const [value, setValue] = React.useState(0);\n\n    return (\n        <div className='userinfo'>\n            <Box sx={{ backgroundColor:'#ffff', borderBottom: 1, borderColor: 'divider' }}>\n                <Tabs value={value} onChange={handleChange} aria-label=\"basic tabs example\">\n                    <Tab value={0} label=\"회원정보\" {...a11yProps(0)} onClick={() => { goUserInfo(); } }/>\n                    <Tab value={1} label=\"북마크\" {...a11yProps(1)} onClick={() => { goBookmark(1); } }/>\n                    <Tab value={2} label=\"자소서 관리\" {...a11yProps(2)} onClick={() => { goManage(2); } } />\n                </Tabs>\n            </Box>\n            <Box sx={{ display: 'flex',\n                       position:'relative', \n                       width:550, \n                       height: 450, \n                       margin:'auto', \n                       textAlign:'center', \n                       border: 1, \n                       borderRadius: 5, \n                       backgroundColor:'#ffffff', \n                       flexDirection: 'column',\n                       mt:5, mb:15,\n                       padding: 5 \n                    }} \n            >    \n                <Typography sx={{fontSize: 32, pb:3 }}>회원 정보</Typography>\n                <Stack  direction=\"row\" spacing={2} alignItems=\"center\"sx={{px:5}}> \n                    <Stack direction=\"column\">\n                        <Stack  direction=\"row\" spacing={2} alignItems=\"center\" sx={{py:2}} >\n                            <Typography sx={{fontSize: 20 }}>아이디 :</Typography>\n                            <Typography sx={{fontSize: 20 }}>Test1</Typography>\n                        </Stack>\n                        <Stack  direction=\"row\" spacing={2} alignItems=\"center\" sx={{py:2}} >\n                            <Typography sx={{fontSize: 20 }}>비밀번호 :</Typography>\n                            <Button variant=\"contained\"  \n                                    size=\"small\" \n                                    sx={{ width: 110, \n                                          mt:3, \n                                          mx:'auto', \n                                          color:'#ffff', \n                                          backgroundColor: '#26a69a', \n                                          borderColor:'#434343'\n                                        }} \n                                    onClick={() => { goPwUpdate() }}\n                            >\n                                비밀번호 변경\n                            </Button>\n                        </Stack>\n                        <Stack  direction=\"row\" spacing={2} alignItems=\"center\" sx={{py:2}}>\n                            <Typography sx={{fontSize: 20 }}>이름 :</Typography>\n                            <Typography sx={{fontSize: 20 }}>Test1</Typography>\n                        </Stack>\n                        <Stack  direction=\"row\" spacing={2} alignItems=\"center\" sx={{py:2}} >\n                            <Typography sx={{fontSize: 20 }}>이메일 :</Typography>\n                            <Typography sx={{fontSize: 20 }}>Test1 @yogiup.com</Typography>\n                        </Stack>\n                    </Stack>    \n                </Stack>\n                <br/>\n                <Button variant=\"contained\"  \n                        size=\"small\" \n                        sx={{ width: 110, \n                              mt:3, \n                              mx:'auto', \n                              color:'#ffff', \n                              backgroundColor: '#26a69a', \n                              borderColor:'#434343'\n                            }} \n                        onClick={() => { goUserInfo_Update() }}\n                >\n                    회원정보 수정\n                </Button>\n            </Box>\n        </div>\n    );\n}\nexport default UserInfo;","/Users/henry/Desktop/prj/YGUP/frontend/src/pages/user/userinfo_update.tsx",[],[],"/Users/henry/Desktop/prj/YGUP/frontend/src/pages/user/idsearch_result.tsx",["272"],[],"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport { Button, Stack, Typography } from '@mui/material';\nimport { padding } from '@mui/system';\n\nconst IdSearch_Result: React.FC = () => {\n    return (\n        <div className='idsearch_result'>\n            <Box sx={{ display: 'flex',\n                       position:'relative', \n                       width:400, \n                       height:400, \n                       margin:'auto', \n                       textAlign:'center', \n                       border: 1, \n                       borderRadius: 5, \n                       backgroundColor:'#ffffff', \n                       flexDirection: 'column', \n                       mt:5 \n                    }}\n            >\n                <Box sx={{ mt:3}} >\n                    <Typography>\n                        아이디 찾기\n                    </Typography>\n                    <hr className='login-idsearch_result-underline'/>\n                    <Box sx={{ pr:6, pl:6 }}>\n                        <Typography sx={{ my:5 }}>\n                            고객님의 정보와 일치하는 아이디 목록입니다.\n                        </Typography>\n                        <Box sx={{ border: 1, \n                                   height: 60, \n                                   textAlign:'center', \n                                   mt:5,\n                                   mb:8, \n                                   padding:3, \n                                   borderColor: 'grey.500'\n                                }}\n                        >\n                            <Typography sx={{ my:3 }}>찾은 아이디</Typography>\n                        </Box>\n                    </Box>\n                </Box>\n                <hr className='underline'/>\n                <Stack direction=\"row\" spacing={2} sx={{ margin:'auto' }} >\n                    <Button variant=\"outlined\"  \n                            size=\"small\" \n                            sx={{ color:'#ffff', \n                                  backgroundColor: '#26a68a', \n                                  borderColor:'#434343'\n                                }} \n                    >\n                        로그인 하기\n                    </Button>\n                    <Button variant=\"outlined\" \n                            size=\"small\" \n                            sx={{ color:'#ffff',\n                                  backgroundColor: '#26a68a', \n                                  borderColor:'#434343'\n                                }} \n                    >\n                        비밀번호 찾기\n                    </Button>\n                </Stack>\n            </Box>\n        </div>\n    );\n\n}\nexport default IdSearch_Result;","/Users/henry/Desktop/prj/YGUP/frontend/src/pages/user/idsearch.tsx",[],[],"/Users/henry/Desktop/prj/YGUP/frontend/src/pages/user/pwupdate.tsx",["273","274","275"],[],"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport { Button, TextField, Typography } from '@mui/material';\nimport { Stack } from '@mui/system';\nimport { BaseUrl } from '../../util/axiosApi';\nimport axios from \"axios\"\nimport { useNavigate } from 'react-router';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../reducers'\n\nconst PwUpdate: React.FC = () => {\n    const navigate = useNavigate();\n    const goUserinfo = () => {\n        navigate('/userinfo')\n    };\n\n    const currentUser = useSelector((state: RootState) => state.userReducer.id);\n\n    const [id, setIdValue] = React.useState(currentUser);\n\n    React.useEffect(()=>{\n        if(id == ''){\n            alert('로그인 후  이용해주세요')\n            navigate('/')\n        }\n    })\n\n    const idChange = (newValue: string) => {\n        setIdValue(newValue);\n    };\n\n    const [pw, setPwValue] = React.useState('');\n    const pwChange = (newValue: string) => {\n        setPwValue(newValue);\n    };\n\n    const pwupdate = () => {\n        const url = BaseUrl + \"/user/pwupdate\"\n        axios.post(url, {\n            headers:\n            {\n                \"Content-Type\": \"application/json\"\n            },\n            body: { id: id, pw: pw }\n        })\n        .then(function(response) {\n            goUserinfo()\n        })\n        .catch(function(error) {\n            alert('비밀번호를 확인해주세요')\n        })\n    };\n\n    return (\n        <div className='pwupdate'>\n            <br/>\n            <Box sx={{ display: 'flex',\n                       position:'relative', \n                       width:400, \n                       height:400, \n                       margin:'auto', \n                       textAlign:'center', \n                       border: 1, \n                       borderRadius: 5, \n                       backgroundColor:'#ffffff', \n                       flexDirection: 'column', \n                       mt: 5,\n                       pt:3\n                    }}\n            >\n                <br/>\n                <Typography sx={{ fontSize: 20, fontWeight:'bold' }} color=\"#434343\" gutterBottom>\n                    비밀번호 변경\n                </Typography>\n                <br/>\n                <Box>\n                    <Stack  direction=\"column\" spacing={2} sx={{ pr:3, pl:3, py:5}}>\n                        <TextField id=\"update-pw\" label=\"비밀번호\" variant=\"outlined\" size=\"small\" margin=\"normal\"/>\n                        <TextField id=\"update-pw\" label=\"비밀번호 확인\" variant=\"outlined\" size=\"small\" margin=\"normal\"/>\n                    </Stack>\n                </Box>\n                <br/>\n                <hr className='login-idsearch-underline'/>\n                <Button variant=\"contained\"  \n                        size=\"small\" \n                        sx={{ width: 100, \n                              mx:'auto', \n                              color:'#ffff', \n                              backgroundColor: '#26a68a', \n                              borderColor:'#434343'\n                            }} \n                            onClick={(event) => pwupdate()}\n                >\n                    확인\n                </Button>\n            </Box>\n        </div>\n    );\n}\nexport default PwUpdate;","/Users/henry/Desktop/prj/YGUP/frontend/src/pages/user/bookmark.tsx",[],[],"/Users/henry/Desktop/prj/YGUP/frontend/src/pages/user/manage.tsx",[],[],"/Users/henry/Desktop/prj/YGUP/frontend/src/pages/user/coverletter_write.tsx",[],[],"/Users/henry/Desktop/prj/YGUP/frontend/src/pages/user/newpredict.tsx",["276"],[],"import { Avatar, Box, Divider, List, ListItem, ListItemAvatar, ListItemButton, ListItemText, Stack, Typography } from '@mui/material';\nimport * as React from 'react';\n\nconst  NewPredict: React.FC = () => {\n    const [selectedIndex, setSelectedIndex] = React.useState(1);\n\n  const handleListItemClick = (\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    index: number,\n  ) => {\n    setSelectedIndex(index);\n  };\n\n    return (\n        <div className='newpredict'>\n            <Stack spacing={2} direction='row'>\n                <Box width={'40%'} sx={{mb:1}}>\n                    <List sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper' }} >\n                        <ListItemButton alignItems=\"flex-start\"\n                                        selected={selectedIndex === 0}\n                                        onClick={(event) => handleListItemClick(event, 0)}\n                        >\n                            <ListItemAvatar>\n                                <Avatar alt=\"hundai\" src=\"/static/images/avatar/1.jpg\" />\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary=\"현대\"\n                                secondary={\n                                    <React.Fragment>\n                                        <Typography\n                                            sx={{ display: 'inline' }}\n                                            component=\"span\"\n                                            variant=\"body2\"\n                                            color=\"text.primary\"\n                                        >\n                                            신입,경력\n                                        </Typography>\n                                        {\"현대 미래자동차지식산업부 개발자\"}\n                                    </React.Fragment>\n                                }\n                            />\n                        </ListItemButton>\n                        <Divider variant=\"inset\" component=\"li\" />\n                        <ListItemButton alignItems=\"flex-start\"\n                                        selected={selectedIndex === 1}\n                                        onClick={(event) => handleListItemClick(event, 1)}\n                        >\n                            <ListItemAvatar>\n                                <Avatar alt=\"Travis Howard\" src=\"/static/images/avatar/2.jpg\" />\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary=\"네이버\"\n                                secondary={\n                                    <React.Fragment>\n                                        <Typography\n                                            sx={{ display: 'inline' }}\n                                            component=\"span\"\n                                            variant=\"body2\"\n                                            color=\"text.primary\"\n                                        >\n                                            신입\n                                        </Typography>\n                                        {\"네이버 개발기획부 pm 직무\"}\n                                    </React.Fragment>\n                                }\n                            />\n                        </ListItemButton>\n                        <Divider variant=\"inset\" component=\"li\" />\n                        <ListItemButton alignItems=\"flex-start\"\n                                        selected={selectedIndex === 2}\n                                        onClick={(event) => handleListItemClick(event, 2)}\n                        >\n                            <ListItemAvatar>\n                                <Avatar alt=\"kakao\" src=\"/static/images/avatar/3.jpg\" />\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary=\"kakao\"\n                                secondary={\n                                    <React.Fragment>\n                                        <Typography\n                                            sx={{ display: 'inline' }}\n                                            component=\"span\"\n                                            variant=\"body2\"\n                                            color=\"text.primary\"\n                                        >\n                                            신입\n                                        </Typography>\n                                        {'카카오 개발사업부 개발자 신입'}\n                                    </React.Fragment>\n                                }\n                            />\n                        </ListItemButton>\n                        </List>   \n                </Box>\n                <Box sx={{ bgcolor: 'white', mx:'auto', alignContent: 'center' }}>\n                    <Stack\n                        direction=\"column\"\n                        justifyContent=\"center\"\n                        alignItems=\"center\"\n                        spacing={2}\n                        sx={{\n                            paddingBottom:20\n                        }}\n                    >\n                        <Typography sx={{mt:5}}>회사이름</Typography>\n                        <Box sx={{ display: 'flex', \n                                width: '80%', \n                                height: 400,\n                                border: '1px solid', \n                                borderColor: 'grey.500', \n                                borderRadius: 2,  \n                                mx:'auto', \n                                my:'auto', \n                                mb:1 \n                                }} \n                        >\n                            <Typography>자소서 내용</Typography>\n                        </Box>\n                    </Stack>\n                </Box>\n            </Stack>\n        </div>\n    );\n}\nexport default NewPredict;","/Users/henry/Desktop/prj/YGUP/frontend/src/pages/user/coverletter_update.tsx",[],[],"/Users/henry/Desktop/prj/YGUP/frontend/src/reducers/userReducer.tsx",[],[],"/Users/henry/Desktop/prj/YGUP/frontend/src/pages/admin/company_basic_list.tsx",[],[],"/Users/henry/Desktop/prj/YGUP/frontend/src/pages/admin/user_list.tsx",[],[],"/Users/henry/Desktop/prj/YGUP/frontend/src/pages/admin/info_update.tsx",["277"],[],"/Users/henry/Desktop/prj/YGUP/frontend/src/pages/admin/write.tsx",["278","279","280","281","282","283"],[],"/Users/henry/Desktop/prj/YGUP/frontend/src/pages/admin/info.tsx",["284"],[],"/Users/henry/Desktop/prj/YGUP/frontend/src/pages/admin/info_delete.tsx",[],[],"/Users/henry/Desktop/prj/YGUP/frontend/src/reducers/modalReducer.tsx",[],[],"/Users/henry/Desktop/prj/YGUP/frontend/src/reducers/headerReducer.tsx",[],[],"/Users/henry/Desktop/prj/YGUP/frontend/src/util/axiosApi.tsx",[],[],"/Users/henry/Desktop/prj/YGUP/frontend/src/pages/components/basicModal.tsx",["285","286","287","288","289","290","291","292","293","294","295"],[],"/Users/henry/Desktop/prj/YGUP/frontend/src/pages/admin/user_delete.tsx",[],[],"/Users/henry/Desktop/prj/YGUP/frontend/src/pages/components/user.tsx",["296","297"],[],"import { Settings } from '@mui/icons-material';\nimport { Avatar, Box, Divider, IconButton, ListItem, ListItemButton, ListItemIcon, ListItemText, Stack, Typography } from '@mui/material';\nimport * as React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nfunction User(): React.ReactElement {\n    const navigate = useNavigate();\n    const { state } = useLocation();\n    const goUserInfo = () => {\n        navigate('/userinfo')\n    };\n    \n    return(\n        <div className='user'>\n            <Box\n                border={1}\n                borderRadius={1}\n                sx={{ width:200, backgroundColor:\"grey.100\", mx:3, my:5 }}>\n                <Stack direction={'column'} spacing={2} >\n                    <Box sx={{ margin:3 }}>\n                        <Stack  direction=\"column\" spacing={3} alignItems=\"center\" >\n                            <Avatar sx={{ bgcolor:'orange', width:100, height:100 }}>이름</Avatar>\n                            <Divider/>\n                            <Typography sx={{ fontSize:20 }}>유저이름</Typography>\n                            <Typography sx={{ fontSize:15 }}>유저 이메일</Typography>\n                        </Stack>\n                    </Box>\n                    <Divider/>\n                    <Box sx={{ height:50, width:200 }} onClick={() => { goUserInfo(); }} >\n                        <ListItem disablePadding>\n                            <ListItemButton>\n                                <ListItemIcon>\n                                    <Settings/>\n                                </ListItemIcon>\n                                <ListItemText primary=\"계정 설정\" />\n                            </ListItemButton>\n                        </ListItem>\n                    </Box>\n                </Stack>\n            </Box>\n        </div>\n    )\n}\n\nexport default User;","/Users/henry/Desktop/prj/YGUP/frontend/src/pages/components/pwvalidation.tsx",["298"],[],{"ruleId":"299","severity":1,"message":"300","line":43,"column":44,"nodeType":"301","messageId":"302","endLine":43,"endColumn":60},{"ruleId":"299","severity":1,"message":"303","line":44,"column":45,"nodeType":"301","messageId":"302","endLine":44,"endColumn":62},{"ruleId":"299","severity":1,"message":"304","line":45,"column":42,"nodeType":"301","messageId":"302","endLine":45,"endColumn":56},{"ruleId":"299","severity":1,"message":"305","line":46,"column":42,"nodeType":"301","messageId":"302","endLine":46,"endColumn":56},{"ruleId":"299","severity":1,"message":"306","line":47,"column":41,"nodeType":"301","messageId":"302","endLine":47,"endColumn":54},{"ruleId":"299","severity":1,"message":"307","line":49,"column":45,"nodeType":"301","messageId":"302","endLine":49,"endColumn":68},{"ruleId":"299","severity":1,"message":"308","line":50,"column":49,"nodeType":"301","messageId":"302","endLine":50,"endColumn":70},{"ruleId":"299","severity":1,"message":"309","line":51,"column":41,"nodeType":"301","messageId":"302","endLine":51,"endColumn":54},{"ruleId":"299","severity":1,"message":"310","line":52,"column":42,"nodeType":"301","messageId":"302","endLine":52,"endColumn":55},{"ruleId":"299","severity":1,"message":"311","line":53,"column":50,"nodeType":"301","messageId":"302","endLine":53,"endColumn":72},{"ruleId":"299","severity":1,"message":"312","line":57,"column":47,"nodeType":"301","messageId":"302","endLine":57,"endColumn":66},{"ruleId":"299","severity":1,"message":"313","line":59,"column":47,"nodeType":"301","messageId":"302","endLine":59,"endColumn":66},{"ruleId":"299","severity":1,"message":"314","line":62,"column":43,"nodeType":"301","messageId":"302","endLine":62,"endColumn":58},{"ruleId":"299","severity":1,"message":"315","line":63,"column":43,"nodeType":"301","messageId":"302","endLine":63,"endColumn":58},{"ruleId":"299","severity":1,"message":"316","line":66,"column":47,"nodeType":"301","messageId":"302","endLine":66,"endColumn":66},{"ruleId":"299","severity":1,"message":"317","line":70,"column":49,"nodeType":"301","messageId":"302","endLine":70,"endColumn":70},{"ruleId":"299","severity":1,"message":"318","line":71,"column":50,"nodeType":"301","messageId":"302","endLine":71,"endColumn":72},{"ruleId":"319","severity":1,"message":"320","line":31,"column":9,"nodeType":"321","messageId":"322","endLine":31,"endColumn":15},{"ruleId":"323","severity":1,"message":"324","line":46,"column":20,"nodeType":"325","messageId":"326","endLine":46,"endColumn":22},{"ruleId":"319","severity":1,"message":"327","line":26,"column":30,"nodeType":"321","messageId":"322","endLine":26,"endColumn":35},{"ruleId":"319","severity":1,"message":"328","line":1,"column":186,"nodeType":"321","messageId":"322","endLine":1,"endColumn":193},{"ruleId":"319","severity":1,"message":"329","line":217,"column":11,"nodeType":"321","messageId":"322","endLine":217,"endColumn":19},{"ruleId":"319","severity":1,"message":"330","line":7,"column":167,"nodeType":"321","messageId":"322","endLine":7,"endColumn":174},{"ruleId":"319","severity":1,"message":"328","line":7,"column":176,"nodeType":"321","messageId":"322","endLine":7,"endColumn":183},{"ruleId":"319","severity":1,"message":"331","line":183,"column":11,"nodeType":"321","messageId":"322","endLine":183,"endColumn":36},{"ruleId":"319","severity":1,"message":"332","line":134,"column":27,"nodeType":"321","messageId":"322","endLine":134,"endColumn":40},{"ruleId":"319","severity":1,"message":"333","line":179,"column":10,"nodeType":"321","messageId":"322","endLine":179,"endColumn":15},{"ruleId":"319","severity":1,"message":"334","line":179,"column":17,"nodeType":"321","messageId":"322","endLine":179,"endColumn":25},{"ruleId":"319","severity":1,"message":"335","line":180,"column":11,"nodeType":"321","messageId":"322","endLine":180,"endColumn":22},{"ruleId":"319","severity":1,"message":"336","line":23,"column":11,"nodeType":"321","messageId":"322","endLine":23,"endColumn":21},{"ruleId":"323","severity":1,"message":"324","line":36,"column":25,"nodeType":"325","messageId":"326","endLine":36,"endColumn":27},{"ruleId":"323","severity":1,"message":"324","line":33,"column":27,"nodeType":"325","messageId":"326","endLine":33,"endColumn":29},{"ruleId":"337","severity":1,"message":"338","line":36,"column":6,"nodeType":"339","endLine":36,"endColumn":26,"suggestions":"340"},{"ruleId":"319","severity":1,"message":"341","line":51,"column":10,"nodeType":"321","messageId":"322","endLine":51,"endColumn":14},{"ruleId":"319","severity":1,"message":"342","line":51,"column":16,"nodeType":"321","messageId":"322","endLine":51,"endColumn":28},{"ruleId":"323","severity":1,"message":"343","line":79,"column":11,"nodeType":"325","messageId":"326","endLine":79,"endColumn":13},{"ruleId":"323","severity":1,"message":"343","line":91,"column":22,"nodeType":"325","messageId":"326","endLine":91,"endColumn":24},{"ruleId":"323","severity":1,"message":"343","line":91,"column":45,"nodeType":"325","messageId":"326","endLine":91,"endColumn":47},{"ruleId":"323","severity":1,"message":"324","line":102,"column":21,"nodeType":"325","messageId":"326","endLine":102,"endColumn":23},{"ruleId":"323","severity":1,"message":"324","line":103,"column":20,"nodeType":"325","messageId":"326","endLine":103,"endColumn":22},{"ruleId":"323","severity":1,"message":"324","line":108,"column":25,"nodeType":"325","messageId":"326","endLine":108,"endColumn":27},{"ruleId":"319","severity":1,"message":"344","line":3,"column":17,"nodeType":"321","messageId":"322","endLine":3,"endColumn":26},{"ruleId":"319","severity":1,"message":"345","line":12,"column":16,"nodeType":"321","messageId":"322","endLine":12,"endColumn":26},{"ruleId":"323","severity":1,"message":"324","line":15,"column":15,"nodeType":"325","messageId":"326","endLine":15,"endColumn":17},{"ruleId":"319","severity":1,"message":"346","line":4,"column":10,"nodeType":"321","messageId":"322","endLine":4,"endColumn":17},{"ruleId":"323","severity":1,"message":"324","line":22,"column":15,"nodeType":"325","messageId":"326","endLine":22,"endColumn":17},{"ruleId":"319","severity":1,"message":"347","line":28,"column":11,"nodeType":"321","messageId":"322","endLine":28,"endColumn":19},{"ruleId":"319","severity":1,"message":"348","line":33,"column":11,"nodeType":"321","messageId":"322","endLine":33,"endColumn":19},{"ruleId":"319","severity":1,"message":"349","line":1,"column":38,"nodeType":"321","messageId":"322","endLine":1,"endColumn":46},{"ruleId":"319","severity":1,"message":"350","line":8,"column":8,"nodeType":"321","messageId":"322","endLine":8,"endColumn":18},{"ruleId":"319","severity":1,"message":"351","line":11,"column":7,"nodeType":"321","messageId":"322","endLine":11,"endColumn":27},{"ruleId":"319","severity":1,"message":"352","line":12,"column":7,"nodeType":"321","messageId":"322","endLine":12,"endColumn":26},{"ruleId":"319","severity":1,"message":"353","line":60,"column":12,"nodeType":"321","messageId":"322","endLine":60,"endColumn":20},{"ruleId":"319","severity":1,"message":"354","line":60,"column":22,"nodeType":"321","messageId":"322","endLine":60,"endColumn":33},{"ruleId":"319","severity":1,"message":"355","line":61,"column":12,"nodeType":"321","messageId":"322","endLine":61,"endColumn":18},{"ruleId":"319","severity":1,"message":"356","line":61,"column":20,"nodeType":"321","messageId":"322","endLine":61,"endColumn":29},{"ruleId":"319","severity":1,"message":"327","line":50,"column":30,"nodeType":"321","messageId":"322","endLine":50,"endColumn":35},{"ruleId":"319","severity":1,"message":"357","line":1,"column":10,"nodeType":"321","messageId":"322","endLine":1,"endColumn":21},{"ruleId":"319","severity":1,"message":"358","line":1,"column":23,"nodeType":"321","messageId":"322","endLine":1,"endColumn":33},{"ruleId":"319","severity":1,"message":"359","line":1,"column":35,"nodeType":"321","messageId":"322","endLine":1,"endColumn":43},{"ruleId":"319","severity":1,"message":"360","line":1,"column":45,"nodeType":"321","messageId":"322","endLine":1,"endColumn":51},{"ruleId":"319","severity":1,"message":"361","line":1,"column":53,"nodeType":"321","messageId":"322","endLine":1,"endColumn":70},{"ruleId":"323","severity":1,"message":"324","line":37,"column":20,"nodeType":"325","messageId":"326","endLine":37,"endColumn":22},{"ruleId":"323","severity":1,"message":"324","line":55,"column":25,"nodeType":"325","messageId":"326","endLine":55,"endColumn":27},{"ruleId":"323","severity":1,"message":"324","line":73,"column":25,"nodeType":"325","messageId":"326","endLine":73,"endColumn":27},{"ruleId":"323","severity":1,"message":"324","line":94,"column":20,"nodeType":"325","messageId":"326","endLine":94,"endColumn":22},{"ruleId":"323","severity":1,"message":"324","line":102,"column":25,"nodeType":"325","messageId":"326","endLine":102,"endColumn":27},{"ruleId":"323","severity":1,"message":"324","line":110,"column":26,"nodeType":"325","messageId":"326","endLine":110,"endColumn":28},{"ruleId":"319","severity":1,"message":"362","line":2,"column":32,"nodeType":"321","messageId":"322","endLine":2,"endColumn":42},{"ruleId":"319","severity":1,"message":"363","line":8,"column":13,"nodeType":"321","messageId":"322","endLine":8,"endColumn":18},{"ruleId":"319","severity":1,"message":"364","line":17,"column":26,"nodeType":"321","messageId":"322","endLine":17,"endColumn":43},"react/jsx-pascal-case","Imported JSX component Board_MyList must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","Imported JSX component Board_Predict must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Board_List must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Board_Like must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Board_Fav must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Board_predict_write must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Board_mylist_chek must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component User_list must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component USer_delte must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Company_Basic_List must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component IdSearch_Result must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component PwSearch_Result must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Info_Update must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Info_Delete must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component UserInfo_Update must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component CoverLetter_Write must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component CoverLetter_Update must be in PascalCase or SCREAMING_SNAKE_CASE","@typescript-eslint/no-unused-vars","'goJoin' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'error' is assigned a value but never used.","'Tooltip' is defined but never used.","'navigate' is assigned a value but never used.","'Toolbar' is defined but never used.","'EnhancedTableToolbarProps' is defined but never used.","'onRequestSort' is assigned a value but never used.","'email' is assigned a value but never used.","'setemail' is assigned a value but never used.","'emailAdress' is assigned a value but never used.","'goIdsearch' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initialEmail'. Either include it or remove the dependency array.","ArrayExpression",["365"],"'name' is assigned a value but never used.","'setNameValue' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'TextField' is defined but never used.","'setIdValue' is assigned a value but never used.","'padding' is defined but never used.","'idChange' is assigned a value but never used.","'pwChange' is assigned a value but never used.","'ListItem' is defined but never used.","'Typography' is defined but never used.","'ALLOW_FILE_EXTENSION' is assigned a value but never used.","'FILE_SIZE_MAX_LIMIT' is assigned a value but never used.","'logofile' is assigned a value but never used.","'setLogoFile' is assigned a value but never used.","'wcfile' is assigned a value but never used.","'setWcFile' is assigned a value but never used.","'FormControl' is defined but never used.","'InputLabel' is defined but never used.","'MenuItem' is defined but never used.","'Select' is defined but never used.","'SelectChangeEvent' is defined but never used.","'IconButton' is defined but never used.","'state' is assigned a value but never used.","'setRequiredLength' is assigned a value but never used.",{"desc":"366","fix":"367"},"Update the dependencies array to be: [currentModalCashe2, initialEmail]",{"range":"368","text":"369"},[1284,1304],"[currentModalCashe2, initialEmail]"]